# Generated by Django 5.1.4 on 2025-01-29 03:46

import blog.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100, verbose_name="nombre")),
                (
                    "last_name",
                    models.CharField(max_length=100, verbose_name="apellido"),
                ),
                (
                    "email_address",
                    models.EmailField(
                        max_length=254, verbose_name="correo electrónico"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        null=True,
                        upload_to="authors",
                        validators=[blog.models.validate_image_size],
                        verbose_name="imagen",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        null=True,
                        validators=[django.core.validators.MinLengthValidator(10)],
                        verbose_name="biografía",
                    ),
                ),
            ],
            options={
                "verbose_name": "Autor",
                "verbose_name_plural": "Autores",
            },
        ),
        migrations.CreateModel(
            name="Carousel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="Título")),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        max_length=400,
                        null=True,
                        verbose_name="Descripción",
                    ),
                ),
            ],
            options={
                "verbose_name": "Carrusel",
                "verbose_name_plural": "Carruseles",
            },
        ),
        migrations.CreateModel(
            name="FAQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(max_length=100, verbose_name="pregunta")),
                ("answer", models.TextField(max_length=400, verbose_name="respuesta")),
            ],
            options={
                "verbose_name": "Pregunta frecuente",
                "verbose_name_plural": "Preguntas frecuentes",
            },
        ),
        migrations.CreateModel(
            name="RestrictedPage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="título")),
                ("content", models.TextField(verbose_name="contenido")),
                (
                    "access_code",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="codigo de acceso"
                    ),
                ),
            ],
            options={
                "verbose_name": "Página para iniciados",
                "verbose_name_plural": "Páginas para iniciados",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("caption", models.CharField(max_length=20, verbose_name="etiqueta")),
            ],
            options={
                "verbose_name": "Etiqueta",
                "verbose_name_plural": "Etiquetas",
            },
        ),
        migrations.CreateModel(
            name="CarouselImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="carousel/images",
                        validators=[blog.models.validate_image_size],
                        verbose_name="Imagen",
                    ),
                ),
                (
                    "caption",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Pie de foto",
                    ),
                ),
                ("url", models.URLField(blank=True, null=True, verbose_name="URL")),
                (
                    "carousel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="blog.carousel",
                        verbose_name="Carrusel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Imagen del Carrusel",
                "verbose_name_plural": "Imágenes del Carrusel",
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=150, verbose_name="título")),
                (
                    "excerpt",
                    models.CharField(max_length=200, null=True, verbose_name="resumen"),
                ),
                ("date", models.DateField(auto_now=True, verbose_name="fecha")),
                (
                    "access_type",
                    models.CharField(
                        choices=[("public", "Público"), ("private", "Privado")],
                        default="public",
                        max_length=20,
                        verbose_name="tipo de acceso",
                    ),
                ),
                ("slug", models.SlugField(unique=True, verbose_name="slug")),
                (
                    "youtube_url",
                    models.URLField(null=True, verbose_name="URL de YouTube"),
                ),
                (
                    "content",
                    models.TextField(
                        validators=[django.core.validators.MinLengthValidator(10)],
                        verbose_name="contenido",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="posts",
                        to="blog.author",
                        verbose_name="autor",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        related_name="posts", to="blog.tag", verbose_name="etiquetas"
                    ),
                ),
            ],
            options={
                "verbose_name": "Video",
                "verbose_name_plural": "Videos",
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_name",
                    models.CharField(max_length=100, verbose_name="nombre de usuario"),
                ),
                (
                    "user_email",
                    models.EmailField(
                        max_length=254, verbose_name="correo electrónico"
                    ),
                ),
                ("text", models.TextField(max_length=400, verbose_name="comentario")),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="blog.post",
                        verbose_name="video",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comentario",
                "verbose_name_plural": "Comentarios",
            },
        ),
    ]
